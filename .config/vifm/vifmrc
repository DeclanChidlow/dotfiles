" ------------------------------------------------------------------------------
" Main settings
" ------------------------------------------------------------------------------

" File editor
set vicmd=nvim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set trash

" What should be saved automatically on restarting vifm
set vifminfo=dhistory,chistory,state,tui,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" This is how many directories to store in the directory history.
set history=50

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" If you would like to run an executable file when you
" press Enter, l or Right Arrow, set this.
set norunexec

" List of color schemes to try (picks the first one supported by the terminal)
colorscheme Default-256 Default

" Hide time
set timefmt=''

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------
" Bookmarks
" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark b ~/bin/
mark h ~/

" ------------------------------------------------------------------------------
" Commands
" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
"
" These are some of the macros that can be used in the action part:
"  %a for user arguments
"  %c for current file under the cursor
"  %C for current file under the cursor of inactive pane
"  %f for selected file(s)
"  %F for selected file(s) of inactive pane
"  %b is the same as %f %F
"  %d for current directory name
"  %D for current directory name of inactive pane
"  %r{x} for list of files in register {x}
"  %m runs the command in a menu window
"  %u uses command's output to build a file list
"  see `:help vifm-macros` and `:help vifm-filename-modifiers` for more

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart full

" ------------------------------------------------------------------------------
" File types association
" ------------------------------------------------------------------------------

" PDF
filextype {*.pdf},<application/pdf>
	\ zathura %c %i
fileviewer {*.pdf},<application/pdf>
	\ pdftotext %c -

" PostScript
filextype {*.ps,*.eps,*.ps.gz},<application/postscript>
        \ zathura %f,

" Djvu
filextype {*.djvu},<image/vnd.djvu>
        \ zathura %f,

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},<audio/*>
        \ mpv --no-video %c %s,
fileviewer {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.aac}
        \ ffprobe -hide_banner -pretty %c 2>&1

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,*.as[fx]},
        \ mpv --no-video %c %s,
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,*.as[fx]},
        \ ffprobe -hide_banner -pretty %c 2>&1

" Web
filextype {*.xhtml,*.html,*.htm},<text/html>
        \ firefox %f &
filetype {*.xhtml,*.html,*.htm},<text/html>
	\ lynx

" Man page
filetype {*.[1-8]},<text/troff> man ./%c
fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Images
filextype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ imv-dir %f
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ img2txt %c

" MD5
filetype *.md5
        \ md5sum -c %f %S

" SHA1
filetype *.sha1
        \ sha1sum -c %f %S

" SHA256
filetype *.sha256
        \ sha256sum -c %f %S

" SHA512
filetype *.sha512
        \ sha512sum -c %f %S

" GPG signature
filetype {*.asc},<application/pgp-signature>
        \ !!gpg --verify %c

" Torrent
filetype {*.torrent},<application/x-bittorrent>
	\ transmission-gtk %f &

" Office files
filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
        \ libreoffice %f &
fileviewer {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
	\ libreoffice --convert-to html --outdir /tmp/ %c &>/dev/null && lynx /tmp/%c:r.html

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * explorer %"f &

" ------------------------------------------------------------------------------
" Panel configuration examples
" ------------------------------------------------------------------------------

" Customize view columns a bit (enable ellipsis for truncated file names)
" set viewcolumns=-{name}..,6{}.

" Show vertical border
" set fillchars=vborder:â”‚

" Filter-out build and temporary files
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}

" ------------------------------------------------------------------------------
" Sample keyboard mappings
" ------------------------------------------------------------------------------

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

if $DISPLAY && executable('gvim')
    " Open file in existing instance of gvim
    nnoremap o :!gvim --remote-tab-silent %f<cr>
    " Open file in new instance of gvim
    nnoremap O :!gvim %f<cr>
endif

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Interaction with system clipboard
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif $WAYLAND_DISPLAY
    if executable('wl-copy')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | wl-copy %i &&
                    \ echo -n %d | wl-copy -p %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | wl-copy %i &&
                    \ echo -n %c:p | wl-copy -p %i<cr>
    endif
elseif $DISPLAY
    if executable('xclip')
        " Yank current directory path into the clipboard
        nnoremap yd :!echo %d | xclip %i<cr>
        " Yank current file path into the clipboard
        nnoremap yf :!echo %c:p | xclip %i<cr>
    elseif executable('xsel')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                    \ echo -n %d | xsel --clipboard --input %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                    \ echo -n %c:p | xsel --clipboard --input %i<cr>
    endif
endif

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" As above, but without the file extension
" nnoremap I cW<c-a>
" nnoremap cc cW<c-u>
" nnoremap A cW

" Open console in current directory
if $DISPLAY && executable('xterm')
    nnoremap ,t :!xterm &<cr>
elseif $TERMINAL
    nnoremap ,t :!$TERMINAL &<cr>
endif

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>

" Open gvim to edit vifmrc
if $DISPLAY && executable('gvim')
    nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>
endif

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>
